require 'exception_hub/version'
require 'exception_hub/configuration'
require 'exception_hub/issue'
require 'exception_hub/client'
require 'exception_hub/rack'
require 'exception_hub/notifier'
require 'exception_hub/interceptor'
require 'exception_hub/storage/json'
require 'exception_hub/validator/file_system'
require 'exception_hub/filtered_exception'
require 'exception_hub/exception_storage'
require 'octokit'

require 'exception_hub/railtie' if defined?(Rails)

# @author Jesse Dearing <jesse.dearing@gmail.com>
module ExceptionHub
  extend Configuration
  extend Client

  def self.handle_exception(exception, env)
    Interceptor.new(exception, env).intercept!
  end

  # Logs exceptions generated by the ExceptionHub gem
  # @param ex [Exception] The exception to log
  def self.log_exception_hub_exception(ex)
    ExceptionHub.logger.error("ExceptionHub: #{ex.class.name}: #{ex.message}")
    ExceptionHub.logger.
      error(ex.backtrace.reduce("") {|memo, line| memo << line << "\n"}) if ex.backtrace
  end
end
